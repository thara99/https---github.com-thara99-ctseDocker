name: Docker Build Deploy



on:

  push:

    branches: [master]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1 # TODO: update to cluster name
  GKE_ZONE: us-central1 # TODO: update to cluster zone
  DEPLOYMENT_NAME: employee-management # TODO: update deployment name if changed in deployment.yaml

jobs:

  build:

    runs-on: ubuntu-latest

     # "id-token" with the intended permissions
    permissions:
      contents: "read"
      id-token: "write"


    steps:

      - uses: actions/checkout@v3

      - name: run shell script

        run: echo commit hash is ${{ github.sha }}

      - name: Login to Docker Hub

        uses: docker/login-action@v1

        with:

          username: ${{ secrets.DOCKER_USERNAME }}

          password: ${{ secrets.DOCKER_TOKEN }}

      # - name: Build the Docker image

      #   run: docker build . --file Dockerfile --tag my-image-name:${{ github.sha }}

      - name: Build and push

        uses: docker/build-push-action@v2

        with:

          context: .

          file: ./Dockerfile

          push: true

          tags: ${{ secrets.DOCKER_USERNAME }}/employee-management-system:${{ github.sha }}

      - name: Update config files in k8s
        run: sed -i.bak 's/{{tag}}/${{ github.sha }}/g' k8s/deploy.yaml && rm k8s/*.bak

        # Alternative option - authentication via credentials json
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      # gcloud CLI SetUp
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: "Use gcloud CLI"
        run: "gcloud info"

      # Getting the GKE credentials and deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      # Deploying docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl apply -f k8s/deploy.yaml 
          kubectl rollout status deployment/$DEPLOYMENT_NAME    
          kubectl get services -o wide
          
          